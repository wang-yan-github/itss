#
#  线上环境配置文件
#
#
server:
  tomcat:
    port-header: HEAD,PUT,DELETE,OPTIONS,TRACE,COPY,SEARCH,PROPFIND
spring:
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 100MB
      enabled: true
  #数据源
  datasource:
    url: jdbc:mysql://192.168.0.93:3306/itss?useUnicode=true&characterEncoding=UTF-8
    #url: jdbc:mysql://127.0.0.1:3306/itss?useUnicode=true&characterEncoding=UTF-8
    username: root
    #password: root
    password: rjgs@2016
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化时建立物理连接的个数
    initial-size: 5
    # 最大连接池数量
    max-active: 20
    # 最小连接池数量
    min-idle: 5
    # 获取连接时最大等待时间
    max-wait: 60000
    # 是否缓存preparedStatement，也就是PSCache。
    pool-prepared-statements: false
    # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
    max-pool-prepared-statement-per-connection-size: -1
    # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
    validation-query: SELECT 1 FROM DUAL
    # 单位：秒，检测连接是否有效的超时时间。
    validation-query-timeout: 1
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    test-on-borrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    test-on-return: false
    # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
    # 有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    time-between-eviction-runs-millis: 6000
    # 连接保持空闲而不被驱逐的最小时间
    min-evictable-idle-time-millis: 1800000
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
    # 配置监控服务器
    stat-view-servlet:
      login-username: admin
      login-password: rjgs@2016
      reset-enable: false
      url-pattern: /druid/*

  tomcat:
    test-while-idle: true

  #redis配置
  redis:
    database: 2
    host: 192.168.0.93
    password: 111111
    port: 6379
    jedis:
      pool:
        max-idle: 100
        min-idle: 1
        max-active: 1000
        max-wait: -1
    timeout: 10000

  jpa:
    #打印sql
    show-sql: true
    hibernate:
      naming:
        #表的命名策略
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      #自动建表
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

elasticsearch:
  host : 192.168.0.93
  port : 9200

mybatis-plus:
  #  type-aliases-package: com.jsdc.itss.model
  #  mapper-locations: com/jsdc/zhly/mapper/xml/*.xml
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略
    field-strategy: 1
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    capital-mode: true
    # Sequence序列接口实现类配置
    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
  configuration:
    map-underscore-to-camel-case: false
    cache-enabled: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mybatis:
    configuration:
      map-underscore-to-camel-case: false

logging:
  level:
    com.jsdc.itss.mapper: error

file:
  upload-path: E:\upload

jsdc:
  fileUrl: e:/file/



